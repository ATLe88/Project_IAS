function [time,pulse] = Ramsey_pulse_3rdcorr(freq,t_w,delta,c,d)
% This function generates the ramsey pulse sequence
% The ratio between pulse length and the ramp time is 10000
% freq:  Output frequency of AWG in Hz
% t_w:   waiting time in ms 
% delta: the offset for ramp down sequence
% Note:  the "ydata" output of this function can be load into the 
%        AWG Keysight 81150A using the iqtools provided by Keysight!
numtot = 500000;
t_init = 1000;
ratio_pulse = 1e4;
t_ramp = numtot/ratio_pulse;
t_wait = freq*numtot*t_w/1e6;
t0 = t_ramp + t_init;
t1 = t_wait + t0;
t2 = 2*t_ramp + t_wait+t_init;
a = -1+delta;
% a = delta;
numslope = 1000;
numend = t_init;
t_constant = numtot - (numslope+numend);
t_slope = t_constant + numslope;
t_end = t_slope + numend;

% Create piecewise funtion to define the pulse form
F = @(t)((t < t_init).*(-1)) + ...
    ((t>=t_init & t<t0).* (-1).*(cos((t-t_init)./t_ramp.*pi)+...
                           c(1).*(1-cos(2.*1.*(t-t_init)./t_ramp.*pi))+...
                           c(2).*(1-cos(2.*2.*(t-t_init)./t_ramp.*pi))+...
                           c(3).*(1-cos(2.*3.*(t-t_init)./t_ramp.*pi))+...
                           c(4).*(1-cos(2.*4.*(t-t_init)./t_ramp.*pi))+...
                           d(1).*sin(2.*1.*(t-t_init)./t_ramp.*pi) +...
                           d(2).*sin(2.*2.*(t-t_init)./t_ramp.*pi) +...
                           d(3).*sin(2.*3.*(t-t_init)./t_ramp.*pi) +...
                           d(4).*sin(2.*4.*(t-t_init)./t_ramp.*pi))) +...
    ((t>=t0 & t<t1).* 1) +...
    ((t>=t1 & t<t2).* ((1-delta/2).* (-1).*(-cos((-1).*(t-t1)./(t2-t1).*pi)+...
                           c(1).*(1-cos(2.*(-1).*(t-t1)./(t2-t1).*pi))+...
                           c(2).*(1-cos(2.*2.*(-1).*(t-t1)./(t2-t1).*pi))+...
                           c(3).*(1-cos(2.*3.*(-1).*(t-t1)./(t2-t1).*pi))+...
                           c(4).*(1-cos(2.*4.*(-1)*(t-t1)./(t2-t1).*pi))+...
                           d(1).*sin(2.*1.*(-1).*(t-t1)./(t2-t1).*pi) +...
                           d(2).*sin(2.*2.*(-1).*(t-t1)./(t2-t1).*pi) +...
                           d(3).*sin(2.*3.*(-1).*(t-t1)./(t2-t1).*pi) +...
                           d(4).*sin(2.*4.*(-1).*(t-t1)./(t2-t1).*pi))+delta/2)) +...
    ((t>=t2 & t<t_constant).* (-1+delta)) +...
    ((t>=t_constant & t<t_slope).* (a-((1+a)./numslope).*(t-t_constant))) +...
    ((t>=t_slope & t<=t_end).*(-1));
t = 0:1:numtot-1;
time = t./(numtot-1)./freq;
pulse = F(t);


% plot(time.*1000,pulse,'o');
% xlabel('Time (ms)');
% ylabel('Amplitude (V)');
% xlim([0.039 0.047]);

end